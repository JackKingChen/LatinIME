apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.2"

        defaultConfig.with {
            applicationId = "com.android.inputmethod.latin"
            minSdkVersion.apiLevel = 14
            targetSdkVersion.apiLevel = 23


            compileOptions.with {
                sourceCompatibility = JavaVersion.VERSION_1_7
                targetCompatibility = JavaVersion.VERSION_1_7
            }

            testApplicationId = "com.android.inputmethod.latin.tests"
            testInstrumentationRunner ="android.support.test.runner.AndroidJUnitRunner"
        }
    }

    android.ndk {
        moduleName = "jni_latinime"

        cppFlags += "-I${file("src/main/jni")}".toString()
        cppFlags += "-I${file("src/main/jni/src")}".toString()
        cppFlags += "-std=c++11"
    }

    android.aaptOptions {
        noCompress = "dict"
    }

    android.lintOptions {
        checkReleaseBuilds = false
    }

    android.productFlavors {
        create("all")

        create("targetPlatforms") {
            ndk.abiFilters += ["x86", "armeabi", "armeabi-v7a"]
        }
    }


    android.buildTypes {
        debug {
            buildConfigFields.with {
                create() {
                    type = "String"
                    name = "cppFlags"
                    value += "-DFLAG_DBG -funwind-tables -fno-inline"
                }
            }
        }
    }

}


dependencies {
    compile 'com.android.support:support-v4:23.1.1'
    compile files('libs/jsr305-1.3.9.jar')
    compile 'junit:junit:4.10'
    compile 'org.mockito:mockito-core:1.9.5'
}